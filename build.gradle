buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

apply plugin: 'java'
apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven'

group= "net.jmorg"
archivesBaseName = "garbageenergy"

// Define properties file
ext.configFile = file "build.properties"
configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

repositories {
    maven {
        name = "CoFH Maven"
        url = "https://maven.covers1624.net"
    }
    maven {
        name = "JEI Maven"
        url = "https://dvs1.progwml6.com/files/maven"
    }
}

dependencies {
    deobfCompile "cofh:RedstoneFlux:${config.rf_mc_version}-${config.rf_version}:universal"
    deobfCompile "cofh:CoFHCore:${config.mc_version}-${config.cofh_core_version}:universal"
    deobfCompile "cofh:ThermalFoundation:${config.mc_version}-${config.tf_version}:universal"
    deobfCompile "mezz.jei:jei_${config.jei_mc_version}:${config.jei_version}"
}

//Pull the mod version from code.
version = "${project.config.mod_version}." + (System.getenv("BUILD_NUMBER") ?: "1")
println "Starting build of ${archivesBaseName}. Version: ${version}"
println "Using Forge ${config.forge_version}, for Minecraft ${config.mc_version}"

minecraft {
    version = config.mc_version + "-" + config.forge_version
    mappings = config.mappings
    runDir = ".minecraft-" + config.mc_version
    replace '${mod_version}', project.config.mod_version
    makeObfSourceJar = false
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

version = "${project.minecraft.version}-${project.version}"